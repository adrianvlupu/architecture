@startuml(id=AC_Containers)
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4.puml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
LAYOUT_WITH_LEGEND()

title All Contributors - Containers

Person(devs, "All Contributors team", "A core member of All Contributors.")
System_Ext(clui, "CLUI", "CL UI toolkit for Node.js.")
System_Ext(chalk, "Chalk", "Terminal string styler.")
System_Ext(compromise, "Compromise", "NLP package.")
System_Ext(crowdin, "Crowdin", "Cloud-based localization management solution.")
System_Ext(gh, "GitHub", "Code Hosting and VCS")
System_Ext(inquirer, "Inquirer", "Collection of common interactive CLIs.")
System_Ext(limdu, "Limdu.js", "ML framework for Node.js")
System_Ext(nclr, "NClr", "Coloured logs (with symbols)")
System_Ext(nyc, "Name Your Contributors", "Package that gets all of the code reviewers, commenters, issue and PR creators from your organization or repo.")
System_Ext(netlify, "Netlify", "Cloud-based hosting platform for static sites, web apps and serverless functions.")
System_Ext(probot, "Probot", "GitHub App framework.")
System_Ext(tvtsplit, "TVT Split", "Dataset splitter into train/validation/test sets")
Person(user, "User", "A user of our software system.")
System_Ext(vercel, "Vercel", "Cloud platform for static sites and serverless functions.")
System_Ext(yargs, "Yargs", "CLI argument parser and help section generator")
System_Boundary(ac_boundary, All Contributors) {
  Container(acl, "AC-Learn", "Node.js", "Multi-class label classifier")
  Container(app, "App", "Node.js", "GitHub app-driven bot")
  Container(cli, "CLI", "Node.js", "all-contributors-cli")
  Container(lib, "Library", "Node.js", "Reads/writes configuration and updates markdown text")
  Container(spec, "Specification", "JSON", "Contains the emoji key, synonyms and aliases")
  Container(website, "Website", "Docusaurus", "Documentation")
}
Rel_D(acl, clui, "uses", "CJS import")
Rel_D(acl, limdu, "uses", "CJS import")
Rel_D(acl, nclr, "uses", "CJS import")
Rel_D(acl, spec, "reads", "CJS import")
Rel_D(acl, tvtsplit, "uses", "CJS import")
Rel_D(devs, acl, "maintain")
Rel_D(devs, app, "maintain")
Rel_D(devs, cli, "maintain")
Rel_D(devs, lib, "maintain")
Rel_D(devs, spec, "maintain")
Rel_D(devs, vercel, "monitor")
Rel_D(devs, website, "maintain")
Rel_D(app, compromise, "uses", "CJS import")
Rel_D(app, gh, "listens to", "webhooks")
Rel_D(app, lib, "uses", "CJS import")
Rel_D(app, probot, "implements", "CJS import")
Rel_D(app, vercel, "serviced by", "??")
Rel_D(cli, clui, "uses", "CJS import")
Rel_D(cli, chalk, "depends on", "CJS import")
Rel_D(cli, inquirer, "uses", "CJS import")
Rel_D(cli, lib, "uses", "CJS import")
Rel_D(cli, nyc, "uses", "CJS import")
Rel_D(cli, yargs, "depends on", "CJS import")
Rel_D(lib, acl, "uses", "CJS import")
Rel_D(lib, spec, "reads", "CJS import")
Rel_D(user, app, "instructs", "GitHub comments via GitHub Events")
Rel_D(user, cli, "uses", "Any terminal")
Rel_D(user, website, "visits/reads", "Web")
Rel_D(website, crowdin, "gets translations from", "Java/Yarn")
Rel_D(website, netlify, "hosted on", "??")
Rel_D(website, spec, "reads", "??")
@enduml